1. 포스트 수정 기능 구현
  1-1) 수정, 삭제 버튼 생성 components/post/PostActionButtons.js
  1-2) props를 JSX 형태로 받아와서 렌더링할 것임 /PostViewer.js 수정 (actionButtons를 props로 넣어 주기)
  1-3) /PostViewerContainer.js에서 /PostActionButtons.js 불러온 후 props를 통한 렌더링
  1-4) 수정 버튼 클릭 시 글쓰기 페이지로 이동
     ① SET_ORIGINAL_POST 액션 생성 (modules/write.js)
     ② 자신의 포스트일 때만 수정과 삭제 버튼이 나타나도록 (/PostViewerCotainer.js)
     ③ 수정 버튼 클릭 시 글쓰기 페이지로 이동 (/PostActionButton.js) // onEdit는 /PostViewerContainer.js에서 props로 받아옴
     ④ 제목, 태그만 자동으로 설정돼 있기 때문에 내용의 초깃값 설정 (/Editor.js)
    ⑤ 포스트 작성 API 대신 수정 API 사용 기능 구현 (lib/api/posts.js)
    ⑥ /write.js 모듈에서 UPDATE_POST 액션과 사가 생성
    ⑦ WriteActionButtonsContainer.js, WriteActionButtons.js 수정 // props 전달
    ⑧ 프레젠테이셔널 컴포넌트 수정 (WriteActionButton.js) // props isEdit 받아옴
  

2. 포스트 삭제 기능 구현

3. react-helmet-async로 meta 태그 설정

4. 프로젝트 마무리
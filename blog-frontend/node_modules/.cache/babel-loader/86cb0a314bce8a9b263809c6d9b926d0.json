{"ast":null,"code":"var _jsxFileName = \"C:\\\\java\\\\react\\\\project_git\\\\blog-frontend\\\\src\\\\containers\\\\auth\\\\LoginForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = _ref => {\n  let {\n    history\n  } = _ref;\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const {\n    form,\n    auth,\n    authError,\n    user\n  } = useSelector(_ref2 => {\n    let {\n      auth,\n      user\n    } = _ref2;\n    return {\n      form: auth.login,\n      auth: auth.auth,\n      authError: auth.authError,\n      user: user.user\n    };\n  }); // 인풋 변경 이벤트 핸들러\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  }; // 폼 등록 이벤트 핸들러\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = form;\n    dispatch(login({\n      username,\n      password\n    }));\n  }; // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["C:/java/react/project_git/blog-frontend/src/containers/auth/LoginForm.js"],"names":["React","useEffect","useState","useSelector","useDispatch","withRouter","changeField","initializeForm","login","AuthForm","check","LoginForm","history","error","setError","dispatch","form","auth","authError","user","onChange","e","value","name","target","key","onSubmit","preventDefault","username","password","console","log","push","localStorage","setItem","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,KAAtC,QAAmD,oBAAnD;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,MAAMC,SAAS,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,MAAkChB,WAAW,CAAC;AAAA,QAAC;AAAEc,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD;AAAA,WAAqB;AACvEH,MAAAA,IAAI,EAAEC,IAAI,CAACT,KAD4D;AAEvES,MAAAA,IAAI,EAAEA,IAAI,CAACA,IAF4D;AAGvEC,MAAAA,SAAS,EAAED,IAAI,CAACC,SAHuD;AAIvEC,MAAAA,IAAI,EAAEA,IAAI,CAACA;AAJ4D,KAArB;AAAA,GAAD,CAAnD,CAHiC,CASjC;;AACA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,QAAQ,CACNT,WAAW,CAAC;AACVU,MAAAA,IAAI,EAAE,OADI;AAEVS,MAAAA,GAAG,EAAEF,IAFK;AAGVD,MAAAA;AAHU,KAAD,CADL,CAAR;AAOD,GATD,CAViC,CAqBjC;;;AACA,QAAMI,QAAQ,GAAGL,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACM,cAAF;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBb,IAA/B;AACAD,IAAAA,QAAQ,CAACP,KAAK,CAAC;AAAEoB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAN,CAAR;AACD,GAJD,CAtBiC,CA4BjC;;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACR,cAAc,CAAC,OAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,SAAJ,EAAe;AACbY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAJ,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACA;AACD;;AACD,QAAIG,IAAJ,EAAU;AACRa,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAhB,MAAAA,QAAQ,CAACL,KAAK,EAAN,CAAR;AACD;AACF,GAXQ,EAWN,CAACO,IAAD,EAAOC,SAAP,EAAkBH,QAAlB,CAXM,CAAT;AAaAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,IAAJ,EAAU;AACRP,MAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;;AACA,UAAI;AACFC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAA7B;AACD,OAFD,CAEE,OAAOE,CAAP,EAAU;AACVS,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;AACF,GATQ,EASN,CAACnB,OAAD,EAAUO,IAAV,CATM,CAAT;AAWA,sBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAIE,IAAA,QAAQ,EAAEM,QAJZ;AAKE,IAAA,KAAK,EAAEb,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAlED;;AAoEA,eAAeR,UAAU,CAACM,SAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { changeField, initializeForm, login } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { check } from '../../modules/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  // 인풋 변경 이벤트 핸들러\r\n  const onChange = e => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'login',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  // 폼 등록 이벤트 핸들러\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      console.log('오류 발생');\r\n      console.log(authError);\r\n      setError('로그인 실패');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      console.log('로그인 성공');\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/');\r\n      try {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {\r\n        console.log('localStorage is not working');\r\n      }\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\java\\\\react\\\\project_git\\\\blog-frontend\\\\src\\\\containers\\\\posts\\\\PaginationContainer.js\";\nimport React from 'react';\nimport Pagination from '../../components/posts/Pagination';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\n\nconst PaginationContainer = _ref => {\n  let {\n    location,\n    match\n  } = _ref;\n  const {\n    lastPage,\n    posts,\n    loading\n  } = useSelector(_ref2 => {\n    let {\n      posts,\n      loading\n    } = _ref2;\n    return {\n      lastPage: posts.lastPage,\n      posts: posts.posts,\n      loading: loading['posts/LIST_POSTS']\n    };\n  }); // 포스트 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\n\n  if (!posts || loading) return null;\n  const {\n    username\n  } = match.params; // page가 없으면 1을 기본값으로 사용\n\n  const {\n    tag,\n    page = 1\n  } = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  });\n  return /*#__PURE__*/React.createElement(Pagination, {\n    tag: tag,\n    username: username,\n    page: parseInt(page, 10),\n    lastPage: lastPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withRouter(PaginationContainer);","map":{"version":3,"sources":["C:/java/react/project_git/blog-frontend/src/containers/posts/PaginationContainer.js"],"names":["React","Pagination","useSelector","withRouter","qs","PaginationContainer","location","match","lastPage","posts","loading","username","params","tag","page","parse","search","ignoreQueryPrefix","parseInt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,mBAAmB,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAwB;AACnD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAA+BR,WAAW,CAAC;AAAA,QAAC;AAAEO,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD;AAAA,WAAyB;AACxEF,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QADwD;AAExEC,MAAAA,KAAK,EAAEA,KAAK,CAACA,KAF2D;AAGxEC,MAAAA,OAAO,EAAEA,OAAO,CAAC,kBAAD;AAHwD,KAAzB;AAAA,GAAD,CAAhD,CADmD,CAOnD;;AACA,MAAI,CAACD,KAAD,IAAUC,OAAd,EAAuB,OAAO,IAAP;AAEvB,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,KAAK,CAACK,MAA3B,CAVmD,CAYnD;;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAI,GAAG;AAAd,MAAoBV,EAAE,CAACW,KAAH,CAAST,QAAQ,CAACU,MAAlB,EAA0B;AAClDC,IAAAA,iBAAiB,EAAE;AAD+B,GAA1B,CAA1B;AAIA,sBACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEJ,GADP;AAEE,IAAA,QAAQ,EAAEF,QAFZ;AAGE,IAAA,IAAI,EAAEO,QAAQ,CAACJ,IAAD,EAAO,EAAP,CAHhB;AAIE,IAAA,QAAQ,EAAEN,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAzBD;;AA2BA,eAAeL,UAAU,CAACE,mBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport Pagination from '../../components/posts/Pagination';\r\nimport { useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\nconst PaginationContainer = ({ location, match }) => {\r\n  const { lastPage, posts, loading } = useSelector(({ posts, loading }) => ({\r\n    lastPage: posts.lastPage,\r\n    posts: posts.posts,\r\n    loading: loading['posts/LIST_POSTS'],\r\n  }));\r\n\r\n  // 포스트 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\r\n  if (!posts || loading) return null;\r\n\r\n  const { username } = match.params;\r\n\r\n  // page가 없으면 1을 기본값으로 사용\r\n  const { tag, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  return (\r\n    <Pagination\r\n      tag={tag}\r\n      username={username}\r\n      page={parseInt(page, 10)}\r\n      lastPage={lastPage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n"]},"metadata":{},"sourceType":"module"}
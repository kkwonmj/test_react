{"ast":null,"code":"var _jsxFileName = \"C:\\\\java\\\\react\\\\project_git\\\\blog-frontend\\\\src\\\\containers\\\\posts\\\\PostListContainer.js\";\nimport React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\n\nconst PostListContainer = _ref => {\n  let {\n    location,\n    match\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    posts,\n    error,\n    loading,\n    user\n  } = useSelector(_ref2 => {\n    let {\n      posts,\n      loading,\n      user\n    } = _ref2;\n    return {\n      posts: posts.posts,\n      error: posts.error,\n      loading: loading['posts/LIST_POSTS'],\n      user: user.user\n    };\n  });\n  useEffect(() => {\n    const {\n      username\n    } = match.params;\n    const {\n      tag,\n      page\n    } = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    dispatch(listPosts({\n      tag,\n      username,\n      page\n    }));\n  }, [dispatch, location.search, match.params]);\n  return /*#__PURE__*/React.createElement(PostList, {\n    loading: loading,\n    error: error,\n    posts: posts,\n    showWriteButton: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withRouter(PostListContainer);","map":{"version":3,"sources":["C:/java/react/project_git/blog-frontend/src/containers/posts/PostListContainer.js"],"names":["React","useEffect","qs","withRouter","useDispatch","useSelector","PostList","listPosts","PostListContainer","location","match","dispatch","posts","error","loading","user","username","params","tag","page","parse","search","ignoreQueryPrefix"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,iBAAiB,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAwB;AACjD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAkCV,WAAW,CACjD;AAAA,QAAC;AAAEO,MAAAA,KAAF;AAASE,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,KAAD;AAAA,WAA+B;AAC7BH,MAAAA,KAAK,EAAEA,KAAK,CAACA,KADgB;AAE7BC,MAAAA,KAAK,EAAED,KAAK,CAACC,KAFgB;AAG7BC,MAAAA,OAAO,EAAEA,OAAO,CAAC,kBAAD,CAHa;AAI7BC,MAAAA,IAAI,EAAEA,IAAI,CAACA;AAJkB,KAA/B;AAAA,GADiD,CAAnD;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEe,MAAAA;AAAF,QAAeN,KAAK,CAACO,MAA3B;AACA,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAgBjB,EAAE,CAACkB,KAAH,CAASX,QAAQ,CAACY,MAAlB,EAA0B;AAC9CC,MAAAA,iBAAiB,EAAE;AAD2B,KAA1B,CAAtB;AAGAX,IAAAA,QAAQ,CAACJ,SAAS,CAAC;AAAEW,MAAAA,GAAF;AAAOF,MAAAA,QAAP;AAAiBG,MAAAA;AAAjB,KAAD,CAAV,CAAR;AACD,GANQ,EAMN,CAACR,QAAD,EAAWF,QAAQ,CAACY,MAApB,EAA4BX,KAAK,CAACO,MAAlC,CANM,CAAT;AAQA,sBACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,KAAK,EAAED,KAHT;AAIE,IAAA,eAAe,EAAEG,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA1BD;;AA4BA,eAAeZ,UAAU,CAACK,iBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport qs from 'qs';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostList from '../../components/posts/PostList';\r\nimport { listPosts } from '../../modules/posts';\r\n\r\nconst PostListContainer = ({ location, match }) => {\r\n  const dispatch = useDispatch();\r\n  const { posts, error, loading, user } = useSelector(\r\n    ({ posts, loading, user }) => ({\r\n      posts: posts.posts,\r\n      error: posts.error,\r\n      loading: loading['posts/LIST_POSTS'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n  useEffect(() => {\r\n    const { username } = match.params;\r\n    const { tag, page } = qs.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    });\r\n    dispatch(listPosts({ tag, username, page }));\r\n  }, [dispatch, location.search, match.params]);\r\n\r\n  return (\r\n    <PostList\r\n      loading={loading}\r\n      error={error}\r\n      posts={posts}\r\n      showWriteButton={user}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PostListContainer);\r\n"]},"metadata":{},"sourceType":"module"}